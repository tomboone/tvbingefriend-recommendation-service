[tool.poetry]
name = "tvbingefriend-recommendation-service"
version = "0.1.0"
description = "Hybrid TV show recommendation system"
authors = ["Tom Boone <tom@tomboone.com>"]

[tool.poetry.dependencies]
python = "^3.12"
azure-functions = "^1.18.0"
pandas = "^2.2.0"
numpy = "^2.3.3"
scikit-learn = "^1.4.0"
scipy = "^1.12.0"
mlflow = "^3.4.0"
requests = "^2.31.0"
sqlalchemy = "^2.0.43"
pandas-stubs = "^2.3.2.250926"
alembic = "^1.16.5"
pymysql = "^1.1.2"
tvbingefriend-azure-storage-service = "^0.1.3"
types-requests = "^2.32.4.20250913"
scipy-stubs = "^1.16.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.24.0"
requests-mock = "^1.12.0"
jupyter = "^1.0.0"
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
black = "^24.0.0"
ruff = "^0.2.0"
mypy = "^1.18.2"
bandit = "^1.8.6"
pre-commit = "^4.3.0"

[[tool.poetry.source]]
name = "TBC_Feed"
url = "https://pkgs.dev.azure.com/tomboonedotcom/BingeFriend/_packaging/TBC_Feed/pypi/simple/"
priority = "primary"

[tool.bandit]
exclude_dirs = ["tests", "notebooks", ".venv", "venv"]
skips = [
    "B101",  # assert_used (needed for pytest)
    "B403",  # import_pickle (legitimate use for ML feature caching)
    "B404",  # import_subprocess (needed for pipeline orchestration)
    "B603",  # subprocess_without_shell (safe - no user input)
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__.py
"scripts/*.py" = ["E402"]  # Scripts need to add parent to path before importing
"alembic/*.py" = ["E402"]  # Alembic files need to add project root to path
"notebooks/**/*.ipynb" = ["E402"]  # Notebooks have special import order

[tool.mypy]
python_version = "3.12"
warn_return_any = false  # Too strict for data science code
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = ["tests", "notebooks", "alembic", "scripts"]
# Relax checks for common patterns
allow_untyped_calls = true
allow_untyped_defs = true
no_implicit_optional = false  # Allow None defaults without Optional[]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
